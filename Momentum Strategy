# MomentumStrategy v2 – Showcase

Este repositorio muestra un ejemplo **simplificado** de una estrategia de *trading algorítmico* desarrollada en **NinjaTrader 8 (C#)**.  
El código está adaptado para fines educativos y de presentación, y **no representa una estrategia real ni operativa**.

---

## ⚙️ Descripción general

**MomentumStrategy v2** busca capturar movimientos impulsivos después de un cruce del RSI hacia zona de sobrecompra.  
Integra validaciones de gestión de riesgo mediante el **ATR**, un sistema de *R-multiple* para el take profit y parámetros ajustables desde el panel de la plataforma.

**Características principales:**
- Señal basada en cruce del RSI sobre nivel de sobrecompra.  
- Stop dinámico calculado sobre la vela de señal.  
- Filtro de riesgo relativo al ATR.  
- Gestión de posición con múltiplos de R (Risk Multiple).  
- Arquitectura orientada a modularidad (propiedades configurables, funciones separadas).

---

## 🧠 Lógica básica

1. Detecta cruce del RSI hacia zona de sobrecompra.  
2. Marca la vela de señal (High/Low).  
3. Espera confirmación de precio (ruptura del máximo + `ConfirmationTicks`).  
4. Evalúa el riesgo máximo permitido por ATR.  
5. Ejecuta una entrada **long** con *Stop Loss* y *Take Profit* definidos por múltiplos de riesgo.

---

## 📈 Resultados de ejemplo (simulados)

| Métrica | Valor |
|----------|--------|
| Profit Factor | 1.72 |
| Max Drawdown | 5.4% |
| Sharpe Ratio | 1.05 |
| % Ganadores | 56% |
| Período de prueba | 2019–2024, ES 5m |

> ⚠️ Estas métricas corresponden a un ejemplo con parámetros genéricos sobre datos históricos de muestra.  
> No constituyen resultados reales ni recomendaciones de inversión.

---

## 🖼️ Visualizaciones

| Curva de capital | Distribución de trades | Parámetros de prueba |
|------------------|-----------------------|----------------------|
| ![Equity Curve](images/equity_curve.png) | ![Trade Distribution](images/trade_distribution.png) | ![Dashboard](images/parameter_dashboard.png) |

---

## 💻 Tecnologías utilizadas

- **NinjaTrader 8 (C#)**  
- Indicadores RSI, ATR, SMA  
- Arquitectura modular por funciones  
- Análisis de métricas con Python y Excel

---

## 🧩 Estructura del código

- `DetectAndStoreSignal()` → Detecta cruce RSI.  
- `TryEnterWhileSignalActive()` → Ejecuta entrada cuando se cumple la confirmación.  
- `ResetSignalsIfRSILeavesZones()` → Controla persistencia de señal.  

Cada componente está documentado para facilitar su adaptación a otros contextos (momentum, mean reversion, etc.).

---

## 🧱 Archivos incluidos

